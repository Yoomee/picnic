-@page_title = @section.name
-no_content_row
-unless @section.description.nil?
  .row
    %p.section_description
      =@section.description
#blog_like_news_view.row
  -@pages_sections.each_with_col_name do |page_section, col_name|
    .blog_like_news{:class => "item_#{col_name}"}
      .blog_like_news_content.sevencol   
        %h2.blog_like_news_title
          =link_to_self(page_section,:class=>'newsbox_title_link')
        %p.blog_like_news_date
          =(page_section.is_a?(Page) ? page_section.publish_on : page_section.created_at).strftime("%e %B %Y")  unless @section.slug == "content_partners"
        %p.blog_like_news_text
          =page_section.is_a?(Page) ? (page_section.intro.blank? ? truncate(page_section.text.strip_tags, :length => 350) : page_section.intro) : page_section.description
        =#link_to "read more", page_section, :class=>'newsbox_arrow'      
      .blog_like_news_img.threecol  
        -if page_section.has_photo?
          =link_to(photo_for(page_section, '300x200#'), page_section)
.row
  .twelvecol
    =will_paginate @pages_sections
.row
  .twelvecol
    -options_panel do
      =back_link
      =link_if_allowed 'Edit section', edit_section_proc(@section)
      =link_if_allowed 'Delete', @section, :method => :delete, :confirm => "Are you sure you want to delete this section? (its subsections and pages will also be deleted)"
      =link_if_allowed "New subsection", new_section_section_proc(@section)
      =link_if_allowed 'New page', new_section_page_proc(@section)
