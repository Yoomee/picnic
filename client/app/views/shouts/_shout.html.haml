-if shout.attachable.is_a?(Link) && !shout.attachable.has_image? && !shout.attachable.url_error?
  -content_for :head do
    =javascript_tag("$(document).ready(function() {#{save_site_info_javascript(shout.attachable, :image_size => "150x125#")}});")
-div_class = (show_member ? 'with_member_details' : 'without_member_details')
-div_class << " compact_view" if compact_view
.shout.flcb{:id => "shout_#{shout.id}", :class => div_class}
  .shout_left
    .shout_left_inner.fl
      -if show_member
        =link_to image_for(shout.member, '50x50#'), shout.member, :class => "flcb"
        .shout_right_inner_details.fl
          =link_to_self shout.member
          =#link_to(pluralize(shout.comments.count, 'comment'), shout, :class => "shout_comments_link flcb")
      -else
        =link_to(pluralize(shout.comments.count, 'comment'), shout, :class => "shout_comments_link flcb")
  .shout_right
    .shout_right_inner
      .shout_text.flcb
        -if search_term
          =search_summary(shout, search_term)
        -else
          =read_more_truncate(shout.text, :length => 300)
      -if !shout.tags.empty?
        .shout_themes.themes_list.flcb
          %ul.lst
            -shout.tags.each do |tag|
              =link_to_tag(tag)
      -if shout.attachable
        .shout_images.flcb
          .shout_image{:class => "#{shout.attachable_type.underscore}_shout_image"}
            %span.shout_icon
            =render_shout_attachable(shout)
      .time_ago.fr
        =time_ago_in_words(shout.created_at)
        ago
      -if shout.is_rateable? && !compact_view
        .shout_ratings
          =render("shouts/ratings", :shout => shout)
    .shout_links.flcb
      -if compact_view
        =link_to("View post &rarr;", shout)
        =link_to(pluralize(shout.comments.count, 'comment'), shout) if !shout.comments.empty?
      -else
        =content_flag_link(shout, :text => "Report")
        =link_to_box_if_allowed("Edit", edit_shout_proc(shout))
        -if shout.removed?
          =link_to_remote_if_allowed("Restore", {:url => restore_shout_proc(shout), :method => :put, :confirm => "Are you sure you want to restore this?"})
        -else
          =link_to_remote_if_allowed("Remove", {:url => remove_shout_proc(shout), :method => :delete, :confirm => "Are you sure you want to remove this?"})
        =link_if_allowed("Delete", shout, :method => :delete, :confirm => "Are you sure?")
        -if logged_in? && allowed_to?(wall_wall_posts_proc(shout.wall), :method => :post)
          =link_to_function(WallPostsController::HELP_MESSAGE, "ShoutForm.showCommentForm($(this))", :class => "comment_prompt")

    =render_shout_comments(shout) if shout.is_commentable? && !compact_view
