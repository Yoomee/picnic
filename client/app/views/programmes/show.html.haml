-content_for :head do
  :javascript
    $(document).ready(function() {
      $('.session').hover(
        function(){
          $('#prog_wrapper .session_hover').hide()
          $(this).children('.session_hover').show();
        },
        function(){
          $(this).children('.session_hover').hide();
        }
      );
      $('.session').mousemove(function(e){
          var sessPos = $(this).offset();
          var colPos = $(this).parents('.venue_col').position().left + $(this).parents('.venue_cols').position().left;
          console.log(colPos);
          if(colPos <= 480){
            $(this).children('.session_hover').css('left',(e.pageX - sessPos.left) + 15);
          } else {
            $(this).children('.session_hover').css('right',155 - (e.pageX - sessPos.left - 15));
          }
         $(this).children('.session_hover').css('top',(e.pageY - sessPos.top) + 15);
      });
      if(!(navigator.platform == 'iPad' || navigator.platform == 'iPhone' || navigator.platform == 'iPod')){
        $('.programme_list_item').hover(
          function(){$(this).children('.tags').addClass('hover');},
          function(){$(this).children('.tags').removeClass('hover');
        });
      }
      Programme.initialise();
    });
    var Programme = {
      initialise: function(){
        var dayMatch = document.location.hash.match(/\d/);
        if(dayMatch)
          Programme.day = parseInt(dayMatch[0]);
        var venMatch = document.location.hash.match(/v(\d)/);
        if(venMatch){
          Programme.venue = parseInt(venMatch[1]);
          $('#programme_venue_id').val(Programme.venue);
        }
        Programme.setAttending();
        if (document.location.hash.match(/me/)){
          Programme.showMyProgramme();
        } else if(document.location.hash.match(/lst/) || ($(window).width() < 768)){
          Programme.showList();
        } else {
          Programme.showCalendar();
        }
        Programme.showDay();
      },
      setAttending: function(){
        if (#{logged_in? ? 1 : 0}){        
          var attending_ids = [#{logged_in? ? @logged_in_member.conference_session_ids.join(',') : ''}];
          $('#prog_filter_my').show();
          $(attending_ids).each(function(index){
            $('#conference_session_'+this).addClass('attending');
          });
        }
      },
      showingMe: false,
      showingList: false,
      venue: 0,
      day: 1,
      days: [#{@conference.days.collect{|d|d.strftime("\'%A %e %B\'")}.join(',')}],
      scroll: function(right) {
        var newLeft = (right ? Programme.left - 160 : Programme.left + 160)
        if((newLeft >= Programme.minLeft) && (newLeft <= 0 )){
          $('.venue_cols').animate({'left':newLeft});
          Programme.left = newLeft;
          switch(newLeft){
            case 0:$('.prog_arrow_left').removeClass('active_arrow');break;
            case Programme.minLeft:$('.prog_arrow_right').removeClass('active_arrow');break;
            default:$('.prog_arrow').addClass('active_arrow');break;
          }
        }        
      },
      left: 0,
      minLeft: #{(@venues.size - 5)*-160},
      goToDay: function(day) {
        if ((day > 0) && (day < #{@conference.days.count + 1}) && (day != Programme.day) ) {
          Programme.showDay(day);
        }
      },
      setHash: function(){
        var hash = '';
        if(Programme.showingList){
          hash = 'lst' + Programme.day; 
        } else if (Programme.showingMe){
          hash = 'me' + Programme.day; 
        } else {
          hash = Programme.day; 
        }
        if(Programme.venue != 0)
          hash = hash + 'v' + Programme.venue;
        document.location.hash = hash;
        setWaypoint();
      },
      showDay: function(day){
        if(day == null)
          day = Programme.day;
        
        $('#timetable_day_'+Programme.day).hide();
        $('.venue_cols').css('left',0);
        $('#timetable_day_'+day).show();
        $('#prog_header_right .active').removeClass('active');
        $('#day_link_' + day).addClass('active');
        $('#date_' + day).addClass('active');
        
        $('.programme_list_item').hide();
        var selector = '.programme_list_item.day'+day;
        if (Programme.showingMe)
          selector = selector + '.attending';
        if (Programme.venue != 0)
          selector = selector + '.venue' + Programme.venue;
        $(selector).show();
        $('#programme_list .row').show();
        $('#programme_list .row:not(:has(.programme_list_item:visible))').hide();
        if(Programme.showingMe && !$('#programme_list .row:has(.programme_list_item:visible)').length){
          $('#not_attending').show();
        }
        Programme.day = day;
        Programme.setHash();
      },
      showCalendar: function(){
        $('.prog_filter').removeClass('active');
        $('#prog_filter_cal').addClass('active');
        $('#programme_list').hide();
        $('#programme_calendar').show();
        $('#programme_venue_selector').hide();
        Programme.venue = 0;
        Programme.showingMe = false;
        Programme.showingList = false;
        document.location.hash = Programme.day;
      },
      showList: function(){
        $('.prog_filter').removeClass('active');
        $('#prog_filter_list').addClass('active');
        $('#programme_calendar').hide();
        $('#programme_list').show();
        $('#programme_venue_selector').show();
        Programme.showingMe = false;
        Programme.showingList = true;
        Programme.showDay();
      },
      showMyProgramme: function(){
        $('.prog_filter').removeClass('active');
        $('#prog_filter_my').addClass('active');
        $('#programme_calendar').hide();
        $('#programme_list').show();
        $('#programme_venue_selector').hide();
        Programme.venue = 0;
        Programme.showingMe = true;
        Programme.showingList = false;
        Programme.venue = 0;
        Programme.showDay();
      },
      showVenue: function(venue){
        Programme.venue = venue;
        Programme.showDay();
      }
    };

-no_content_row
-title "Program", :hidden => true
-cache("program#{@conference.id}", :time_to_live => 1.year) do
  #prog_container
    .row
      #prog_header
        #prog_header_left
          %h5 PROGRAM 2011
          #prog_filters
            =link_to_function("Calendar", "Programme.showCalendar()", :class => "prog_filter", :id => "prog_filter_cal")
            =link_to_function("List view", "Programme.showList()", :class => "prog_filter", :id => "prog_filter_list")
            =link_to_function("My program", "Programme.showMyProgramme()", :class => "prog_filter", :id => "prog_filter_my")
        #prog_header_right
          .days.fr
            -@conference.days.each_with_index do |day, idx|
              =link_to_function("Day #{idx + 1}", "Programme.goToDay(#{idx+1})",:class => "day #{day == @date ? 'active' : ''}", :id => "day_link_#{idx+1}")
          .dates
            -@conference.days.each_with_index do |day, idx|
              .date{:class => day == @date ? 'active' : '', :id => "date_#{idx+1}"}
                =day.strftime("%A %e %B")
      #programme_calendar          
        #prog_hours
          .prog_arrow.prog_arrow_left
            =link_to_function("&larr;", "Programme.scroll(0)");
          .hours
            -(9..19).each do |hour|
              .hour="%d:00" % hour
          .prog_arrow.prog_arrow_left
            =link_to_function("&larr;", "Programme.scroll(0)");
        #prog_wrapper
          .prog_arrow#top_scroll_right.prog_arrow_right{:class => @venues.size > 4 ? 'active_arrow' : ''}
            =link_to_function("&rarr;", "Programme.scroll(1)");
          .prog_arrow#bottom_scroll_right.prog_arrow_right{:class => @venues.size > 4 ? 'active_arrow' : ''}
            =link_to_function("&rarr;", "Programme.scroll(1)");
          -@conference.days.each_with_index do |day,idx|
            .timetable{:style => "display:#{@date == day ? 'block' : 'none'}", :id => "timetable_day_#{idx+1}"}
              .venue_cols
                -@venues.each do |venue|
                  .venue_col
                    .col_title.top=venue
                    -venue.sessions.on_date(day).each do |session|
                      -height = (session.duration_in_hours * 100).round - 2
                      -link_to(session, :class => "session #{'short' if session.duration < 0.17}", :style => "top:#{((session.starts_at_offset(9)*100).round)+40}px;height:#{height}px;background-color:#{session.color};color:#{complementary_color(session.color)}", "data-height" => height) do
                        .session_content
                          .title=session
                        .session_hover{:style=>"border-color:#{complementary_color(session.color)}"}
                          .title{:style=>"background-color:#{session.color};color:#{complementary_color(session.color)}"}=session
                          .details
                            =session.time_string
                            %br
                            =session.description.word_truncate(150)
                            -if !session.speakers.blank?
                              .speakers
                                -session.speakers.each do |speaker|
                                  =image_for(speaker, "52x52#")
                          -if !session.tags.empty?
                            .footer
                              -session.tags.first(3).each do |tag|
                                %span.tag{:style => "background:#{tag.color || '#ccc'}"}=tag
                            
                    .col_title.bottom=venue
    .row
      .twelvecol#programme_venue_selector
        Showing:
        =select_tag "programme_venue_id", options_for_select(@venues.collect{|v| [v, v.id]}.insert(0, ['All venues', 0])), :onchange => "Programme.showVenue($(this).val())"
    #programme_list
      .row#not_attending
        .twelvecol
          You aren't attending any sessions on this day.
      -@conference.sessions.ascend_by_time_of_day_and_venue.group_by{|s|s.starts_at.hour}.each do |hour, sessions|
        .row
          .onecol.programme_list_hour
            =hour
          .elevencol.list_col.last
            -sessions.each do |session|
              =render('programmes/list_item', :session => session, :show_day => false, :hidden => true)

  .row
    .twelvecol
    -options_panel do
      =back_link
      =link_if_allowed "Edit conference", edit_conference_proc(@conference)
      =link_if_allowed "Delete conference", conference_proc(@conference), :method => :delete, :confirm => "Are you sure? All the events at this conference will be deleted."
      =link_if_allowed "New session at this conference", new_conference_conference_session_proc(@conference)
    
  
  
  
  
  
      

  