-if allowed_to?(edit_member_proc(@member))
  -content_for :head do
    :javascript
      var response;
      var locMap;
      var LocationMap = {
        editing: 0,
        savedCenter:null,
        center: null,
        toggleEdit: function(map_index) {
          if(LocationMap.editing){
            LocationMap.cancelEdit(map_index);
            LocationMap.editing = 0;
          } else {
            LocationMap.startEdit(map_index);
            LocationMap.editing = 1;
          }
        },
        startEdit: function(map_index) {
          #{"if(LocationMap.savedCenter == null){LocationMap.savedCenter = new google.maps.LatLng(#{@member.lat},#{@member.lng});}" if @member.has_lat_lng?}
          $('#edit_map'+map_index+'_link').html('Cancel');
          if (map_index == 0){map_index = '';}
          locMap = eval('map'+map_index);
          var mapCenter = locMap.getCenter();
          LocationMap.center = mapCenter;
          $('#member_location').animate({width:'100%'},500);
          $('#member_location').addClass('editing');
          $('#map_canvas'+map_index).animate({
            width:'100%',
            height:400
          },750, function(){
            google.maps.event.trigger(locMap, 'resize');
            locMap.panTo(mapCenter);
            $('#save_map_link').fadeIn();
            $('#member_location p.help').blindRight();
            locMap.setOptions({
              zoomControl: true,
              zoomControlOptions: {style:'LARGE'},
              scrollwheel: true,
              draggable: true,
              disableDoubleClickZoom: false
            });
          });
        },
        updateAddress: function(){
          var url = '#{geocode_path}?lat_lng=' + LocationMap.center.lat() + ',' + LocationMap.center.lng();
          $.get(url, function(data){
            $('#member_city').val(data.city);
            $('#member_country').val(data.country);
          });
        },
        updateLatLng: function(latLng) {
          LocationMap.center = latLng;
          $('#member_lat').val(latLng.lat());
          $('#member_lng').val(latLng.lng());
        },
        cancelEdit: function(map_index){
          if(LocationMap.savedCenter != null){locMap.panTo(LocationMap.savedCenter);}
          LocationMap.stopEdit(map_index);
        },
        save: function(map_index) {
          $('#member_location form#edit_member_#{@member.id}').trigger('onsubmit');
          $('#member_address').html(''+$('#member_city').val()+', '+$('#member_country').val());
          LocationMap.savedCenter = locMap.getCenter();
          LocationMap.stopEdit(map_index);
        },
        stopEdit: function(map_index) {
          $('#edit_map'+map_index+'_link').html('Edit')
          if (map_index == 0){map_index = '';}
          locMap = eval('map'+map_index);
          locMap.setOptions({
            zoomControl: false,
            scrollwheel: false,
            draggable: false,
            disableDoubleClickZoom: true
          });
          var mapCenter = locMap.getCenter();
          $('#member_location p.help').hide();
          $('#member_location').animate({width:'50%'},500);
          $('#member_location').removeClass('editing');
          $('#save_map_link').fadeOut();
          $('#map_canvas'+map_index).animate({
            width:300,
            height:200
          },750, function(){
            google.maps.event.trigger(locMap, 'resize');
            locMap.panTo(mapCenter);
            if(LocationMap.savedCenter == null){$('#map_canvas'+map_index).hide();}
          });
        }
      };
      
      var MemberShouts = {

        getShouts: function(filter) {
          $.ajax({
            url: '#{member_path(@member)}',
            data: {
              filter: filter,
              wants: 'shouts'
            },
            success: function(html) {
              $('#shouts_container').html(html);
            }
          })
        },
      
        latest: function() {
          $('#latest_shouts').addClass('active');
          $('#popular_shouts').removeClass('active');
          this.getShouts('latest');
        }, 
      
        popular: function() {
          $('#popular_shouts').addClass('active');
          $('#latest_shouts').removeClass('active');
          this.getShouts('popular');
        }        
      
      };

-no_content_row
-title @member.full_name, :hidden => true
.row
  .twocol
    .profile_photo.subrow
      -if @member == @logged_in_member
        =link_to image_for(@member, '140x'), :controller => 'member', :action => 'setphoto', :id => @logged_in_member
      -else
        =image_for(@member, '140x')
      =fancybox_edit(@member, :image, :partial => "members/photo_form")
    .friends_list.subrow
      %h3.profile_title="#{forename_or_my(@member, :capitalize => true)} friends"
      -if @member.friends.empty?
        ="Aww shame. #{forename_or_you(@member, "don't", :capitalize => true)} have any friends."
        %br
        =link_to("Get connected!", club_path)
      -else
        -@member.friends.each do |member|
          =link_to(image_for(member, '50x50#'), member)
  .eightcol
    .profile_info.subrow
      %h1.profile_title
        =@member.full_name
    .what_i_bring.subrow
      %strong I bring
      %span{:id => "members_#{@member.id}_what_i_bring"}=@member.what_i_bring || "..."
      =fancybox_edit(@member, :what_i_bring, :partial => "members/what_i_bring", :fancy => true)
    -if !@member.bio.blank? || allowed_to?(edit_member_proc(@member))
      .bio.subrow
        %span{:id => "members_#{@member.id}_bio"}=simple_format(strip_tags(@member.bio))
        =fancybox_edit(@member, :bio, :label => "Bio", :link_text => (@member.bio.blank? ? "Click here to add your bio": "Edit" ), :input_html => {:rows => 5}, :sf => true)
    .services.subrow
      %ul.lst
        -if @member.fb_connected?
          %li
            =favicon("http://www.facebook.com")
            =link_to("Facebook", @member.fb_profile_url)
        -if @member.twitter_connected?
          %li
            =favicon("http://www.twitter.com")
            =link_to("Twitter (@#{@member.twitter_username})", @member.twitter_profile_url)
        -if @member.linked_in_connected?
          %li
            =favicon("http://www.linkedin.com")
            =link_to("LinkedIn", @member.linked_in_profile_url)
        -@member.urls.each do |url|
          %li{:id => "url_#{url.id}"}
            =image_tag(url.favicon)
            =link_to_url(url.url, :target => "_blank", :class => url.host)
            =link_to_remote_if_allowed('x', {:url => url_proc(url), :method => :delete, :confirm => 'Are you sure you want to delete this url?'}, :class => "delete_link")
            
      -if @member == logged_in_member
        =link_to_box(" + Add a service", new_url_path, :class => "new_link")
    #member_themes.themes_list.subrow
      %h3.profile_title="About the real #{forename_or_me(@member)}"
      =render('themes/list', :tags => @member.tags, :list_id => "member_#{@member.id}_themes")
      =fancybox_edit(@member, :tags_list, :partial => "members/themes_form", :link_text => (@member.tags.blank? ? "Add your themes  ": "Edit" ))
        
    .subrow
      #member_location
        %h3.profile_title Location:
        -if allowed_to?(edit_member_proc(@member))
          -semantic_remote_form_for @member do |form|        
            %p#member_address=render_address(@member.location) unless @member.location.unknown?
            -form.inputs :id => "member_address_inputs" do
              =form.input :city, :label => false, :input_html => {:value => @member.location.unknown? ? 'Amsterdam' : nil}
              =form.input :country, :label => false, :input_html => {:value => @member.location.unknown? ? 'Netherlands' : nil}
            -location = @member.location.try(:unknown?) ? Location.new(:lat => 52.374551, :lng =>4.898529) : @member.location
            %p.help{:style=>"display:none"}
              Drag the map to set your location
            =google_map(location, :width => 300, :height => 200, :other => "google.maps.event.addListener(map#{@map_index}, 'center_changed', function(){mapCenter=map#{@map_index}.getCenter();marker0.setPosition(mapCenter);LocationMap.updateLatLng(mapCenter);});google.maps.event.addListener(map#{@map_index}, 'dragend', function(){LocationMap.updateAddress();});google.maps.event.addListener(map#{@map_index}, 'zoom_changed', function(){LocationMap.updateAddress();});", :interactive => false, :style => "display:#{@member.has_lat_lng? ? 'block' : 'none'}")
            =link_to_function("#{@member.location.unknown? ? 'Add your location' : 'Edit'}", "LocationMap.toggleEdit(#{@map_index})", :id => "edit_map#{@map_index}_link")
            =link_to_function("Update location", "LocationMap.save(#{@map_index})", :id => "save_map_link", :class => "bttn_l")
            %div{:style => "display:none"}
              =form.input :lat, :as => :hidden
              =form.input :lng, :as => :hidden
              =form.commit_button "Save"
        -else
          %p=@member.location.try(:unknown?) ? 'Unknown' : render_address(@member.location)
          =google_map(@member.location, :width => 300, :height => 200) unless @member.location.try(:unknown?)
      #member_badges
        %h3.profile_title="#{pluralize(@member.points, 'club point')}"
        %ul.lst
          -@member.badges.each do |badge|
            %li
              =link_to_box(image_for(badge, "60x60"), info_badge_path(badge))
              =link_to_box(badge, info_badge_path(badge))
  .twocol.last
    #member_links
      %ul.lst
        %li=render_add_friend_link(@member, :ajax_loader => "ajax_loader_squares.gif", :text => "Send a friend request")
.row
  .twocol
  .eightcol
    .fr.post_to_wall
      =link_to_box("Post something", new_shout_path, :class => "bttn_l new_comment_link", :scrolling => false) if @member == logged_in_member

    =#render("shouts/form", :shout => @member.received_shouts.build)
  .clear
  .twocol.last
.row
  .twocol
    .themes_list
      %h3.profile_title="Themes"
      %ul.lst
        -@member.shout_tags.each do |tag|
          =link_to_tag(tag)
  .eightcol
    #members_shouts
      %h3.profile_title.fl="#{forename_or_your(@member, :capitalize => true)} posts"
      .stories_filter
        Showing:
        %ul
          =li_with_active true, link_to_function('Latest', 'MemberShouts.latest()'), :id => 'latest_shouts'
          =li_with_active false, link_to_function('Popular', 'MemberShouts.popular()'), :id => 'popular_shouts'
      -if @member.shouts.empty?
        %p#no_posts="#{forename_or_you(@member, "hasn't", :capitalize => true)} got any posts yet."
      #shouts_container
        =render_shouts(@member.shouts, :show_member => true)
  .twocol.last
.row
  -options_panel do
    =back_link
    =link_if_allowed "Edit", edit_member_proc(@member)
    =link_to_box_if_allowed "Award badge", unawarded_member_badges_proc(@member)
